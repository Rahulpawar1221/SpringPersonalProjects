{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/auth/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class LoginpageComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.loginData = {\n      username: '',\n      password: ''\n    };\n  }\n  onLogin() {\n    this.authService.login(this.loginData).subscribe({\n      next: res => {\n        localStorage.setItem('token', res.token);\n        localStorage.setItem('role', res.role);\n        // Normalize role to uppercase for comparison\n        const userRole = res.role?.replace('ROLE_', '').toUpperCase();\n        if (userRole === 'ADMIN') {\n          this.router.navigate(['/admin-dashboard']);\n        } else if (userRole === 'LANDLORD') {\n          this.router.navigate(['/landlord-dashboard']);\n        } else if (userRole === 'TENANT') {\n          this.router.navigate(['/tenant-dashboard']);\n        } else {\n          alert('Unknown role detected. Redirecting to landing page.');\n          this.router.navigate(['/']);\n        }\n      },\n      error: () => {\n        alert('Login failed. Please check your credentials.');\n      }\n    });\n  }\n  static {\n    this.ɵfac = function LoginpageComponent_Factory(t) {\n      return new (t || LoginpageComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginpageComponent,\n      selectors: [[\"app-loginpage\"]],\n      decls: 10,\n      vars: 2,\n      consts: [[1, \"login-container\"], [3, \"ngSubmit\"], [\"type\", \"text\", \"placeholder\", \"Username\", \"name\", \"username\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", \"placeholder\", \"Password\", \"name\", \"password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"]],\n      template: function LoginpageComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"p\");\n          i0.ɵɵtext(1, \"loginpage works!\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"div\", 0)(3, \"h2\");\n          i0.ɵɵtext(4, \"Login\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function LoginpageComponent_Template_form_ngSubmit_5_listener() {\n            return ctx.onLogin();\n          });\n          i0.ɵɵelementStart(6, \"input\", 2);\n          i0.ɵɵlistener(\"ngModelChange\", function LoginpageComponent_Template_input_ngModelChange_6_listener($event) {\n            return ctx.loginData.username = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"input\", 3);\n          i0.ɵɵlistener(\"ngModelChange\", function LoginpageComponent_Template_input_ngModelChange_7_listener($event) {\n            return ctx.loginData.password = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"button\", 4);\n          i0.ɵɵtext(9, \"Login\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngModel\", ctx.loginData.username);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngModel\", ctx.loginData.password);\n        }\n      },\n      dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n      styles: [\"\\n\\n.login-container[_ngcontent-%COMP%] {\\n  max-width: 400px;\\n  margin: 80px auto;\\n  padding: 30px;\\n  background-color: white;\\n  border-radius: 12px;\\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\\n}\\n\\ninput[_ngcontent-%COMP%] {\\n  display: block;\\n  width: 100%;\\n  margin: 15px 0;\\n  padding: 12px;\\n  font-size: 16px;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n  width: 100%;\\n  padding: 12px;\\n  background-color: #0077cc;\\n  color: white;\\n  font-size: 16px;\\n  border: none;\\n  border-radius: 6px;\\n  cursor: pointer;\\n}\\n\\nbutton[_ngcontent-%COMP%]:hover {\\n  background-color: #005fa3;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvbG9naW5wYWdlL2xvZ2lucGFnZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNDQUFzQztBQUN0QztFQUNFLGdCQUFnQjtFQUNoQixpQkFBaUI7RUFDakIsYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixtQkFBbUI7RUFDbkIseUNBQXlDO0FBQzNDOztBQUVBO0VBQ0UsY0FBYztFQUNkLFdBQVc7RUFDWCxjQUFjO0VBQ2QsYUFBYTtFQUNiLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsYUFBYTtFQUNiLHlCQUF5QjtFQUN6QixZQUFZO0VBQ1osZUFBZTtFQUNmLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQiIsInNvdXJjZXNDb250ZW50IjpbIi8qIHNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyAqL1xyXG4ubG9naW4tY29udGFpbmVyIHtcclxuICBtYXgtd2lkdGg6IDQwMHB4O1xyXG4gIG1hcmdpbjogODBweCBhdXRvO1xyXG4gIHBhZGRpbmc6IDMwcHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbiAgYm9yZGVyLXJhZGl1czogMTJweDtcclxuICBib3gtc2hhZG93OiAwIDRweCAxMnB4IHJnYmEoMCwgMCwgMCwgMC4yKTtcclxufVxyXG5cclxuaW5wdXQge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIG1hcmdpbjogMTVweCAwO1xyXG4gIHBhZGRpbmc6IDEycHg7XHJcbiAgZm9udC1zaXplOiAxNnB4O1xyXG59XHJcblxyXG5idXR0b24ge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIHBhZGRpbmc6IDEycHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwNzdjYztcclxuICBjb2xvcjogd2hpdGU7XHJcbiAgZm9udC1zaXplOiAxNnB4O1xyXG4gIGJvcmRlcjogbm9uZTtcclxuICBib3JkZXItcmFkaXVzOiA2cHg7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcblxyXG5idXR0b246aG92ZXIge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDVmYTM7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["LoginpageComponent","constructor","authService","router","loginData","username","password","onLogin","login","subscribe","next","res","localStorage","setItem","token","role","userRole","replace","toUpperCase","navigate","alert","error","i0","ɵɵdirectiveInject","i1","AuthService","i2","Router","selectors","decls","vars","consts","template","LoginpageComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginpageComponent_Template_form_ngSubmit_5_listener","LoginpageComponent_Template_input_ngModelChange_6_listener","$event","LoginpageComponent_Template_input_ngModelChange_7_listener","ɵɵadvance","ɵɵproperty"],"sources":["D:\\My Personal SpringBoot Projects\\tenant_management_system\\tenant_management_system Frontend\\tms_frontend\\src\\app\\pages\\loginpage\\loginpage.component.ts","D:\\My Personal SpringBoot Projects\\tenant_management_system\\tenant_management_system Frontend\\tms_frontend\\src\\app\\pages\\loginpage\\loginpage.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/auth/auth.service';\n\n@Component({\n  selector: 'app-loginpage',\n  templateUrl: './loginpage.component.html',\n  styleUrls: ['./loginpage.component.css']\n})\nexport class LoginpageComponent {\n  loginData = {\n    username: '',\n    password: ''\n  };\n\n  constructor(private authService: AuthService, private router: Router) {}\n\n  onLogin() {\n    this.authService.login(this.loginData).subscribe({\n      next: (res) => {\n        localStorage.setItem('token', res.token);\n        localStorage.setItem('role', res.role);\n\n        // Normalize role to uppercase for comparison\n        const userRole = res.role?.replace('ROLE_', '').toUpperCase();\n\n\n        if (userRole === 'ADMIN') {\n          this.router.navigate(['/admin-dashboard']);\n        } else if (userRole === 'LANDLORD') {\n          this.router.navigate(['/landlord-dashboard']);\n        } else if (userRole === 'TENANT') {\n          this.router.navigate(['/tenant-dashboard']);\n        } else {\n          alert('Unknown role detected. Redirecting to landing page.');\n          this.router.navigate(['/']);\n        }\n      },\n      error: () => {\n        alert('Login failed. Please check your credentials.');\n      }\n    });\n  }\n}\n","<p>loginpage works!</p>\n<!-- src/app/login/login.component.html -->\n<div class=\"login-container\">\n  <h2>Login</h2>\n  <form (ngSubmit)=\"onLogin()\">\n    <input type=\"text\" placeholder=\"Username\" [(ngModel)]=\"loginData.username\" name=\"username\" required />\n    <input type=\"password\" placeholder=\"Password\" [(ngModel)]=\"loginData.password\" name=\"password\" required />\n    <button type=\"submit\">Login</button>\n  </form>\n</div>\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}