{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nexport class UpdateTenantProfileComponent {\n  constructor(fb, http, router) {\n    this.fb = fb;\n    this.http = http;\n    this.router = router;\n    this.message = '';\n    this.error = '';\n  }\n  ngOnInit() {\n    this.updateForm = this.fb.group({\n      tenantFullName: ['', [Validators.required]],\n      tenantEmail: ['', [Validators.required, Validators.email]],\n      tenantPhoneNumber: ['', [Validators.required, Validators.pattern(/^[6-9]\\d{9}$/)]],\n      tenantPermanentAddress: ['', [Validators.required]],\n      aadhaarNumber: ['', [Validators.required, Validators.pattern(/^\\d{12}$/)]],\n      panCardNumber: ['', [Validators.required, Validators.pattern(/^[A-Z]{5}[0-9]{4}[A-Z]{1}$/)]]\n    });\n  }\n  onSubmit() {\n    if (this.updateForm.invalid) {\n      this.error = 'Please fill in all required fields correctly.';\n      return;\n    }\n    const headers = new HttpHeaders({\n      'Authorization': 'Bearer ' + localStorage.getItem('token')\n    });\n    this.http.put('/api/tenant/update/profile', this.updateForm.value, {\n      headers\n    }).subscribe({\n      next: response => {\n        this.message = response.message;\n        this.error = '';\n      },\n      error: err => {\n        this.error = err.error?.message || 'Update failed. Please try again.';\n        this.message = '';\n      }\n    });\n  }\n  static {\n    this.ɵfac = function UpdateTenantProfileComponent_Factory(t) {\n      return new (t || UpdateTenantProfileComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: UpdateTenantProfileComponent,\n      selectors: [[\"app-update-tenant-profile\"]],\n      decls: 2,\n      vars: 0,\n      template: function UpdateTenantProfileComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"p\");\n          i0.ɵɵtext(1, \"update-tenant-profile works!\");\n          i0.ɵɵelementEnd();\n        }\n      },\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["Validators","HttpHeaders","UpdateTenantProfileComponent","constructor","fb","http","router","message","error","ngOnInit","updateForm","group","tenantFullName","required","tenantEmail","email","tenantPhoneNumber","pattern","tenantPermanentAddress","aadhaarNumber","panCardNumber","onSubmit","invalid","headers","localStorage","getItem","put","value","subscribe","next","response","err","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","HttpClient","i3","Router","selectors","decls","vars","template","UpdateTenantProfileComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["D:\\My Personal SpringBoot Projects\\tenant_management_system\\tenant_management_system Frontend\\tms_frontend\\src\\app\\dashboards\\tenant-dashboard\\update-tenant-profile\\update-tenant-profile.component.ts","D:\\My Personal SpringBoot Projects\\tenant_management_system\\tenant_management_system Frontend\\tms_frontend\\src\\app\\dashboards\\tenant-dashboard\\update-tenant-profile\\update-tenant-profile.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-update-tenant-profile',\n  templateUrl: './update-tenant-profile.component.html',\n  styleUrls: ['./update-tenant-profile.component.css']\n})\nexport class UpdateTenantProfileComponent implements OnInit{\n\n  updateForm!: FormGroup;\n  message: string = '';\n  error: string = '';\n\n  constructor(\n    private fb: FormBuilder,\n    private http: HttpClient,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.updateForm = this.fb.group({\n      tenantFullName: ['', [Validators.required]],\n      tenantEmail: ['', [Validators.required, Validators.email]],\n      tenantPhoneNumber: ['', [Validators.required, Validators.pattern(/^[6-9]\\d{9}$/)]],\n      tenantPermanentAddress: ['', [Validators.required]],\n      aadhaarNumber: ['', [Validators.required, Validators.pattern(/^\\d{12}$/)]],\n      panCardNumber: ['', [Validators.required, Validators.pattern(/^[A-Z]{5}[0-9]{4}[A-Z]{1}$/)]]\n    });\n  }\n\n  onSubmit(): void {\n    if (this.updateForm.invalid) {\n      this.error = 'Please fill in all required fields correctly.';\n      return;\n    }\n\n    const headers = new HttpHeaders({\n      'Authorization': 'Bearer ' + localStorage.getItem('token')\n    });\n\n    this.http.put<any>('/api/tenant/update/profile', this.updateForm.value, { headers })\n      .subscribe({\n        next: (response) => {\n          this.message = response.message;\n          this.error = '';\n        },\n        error: (err) => {\n          this.error = err.error?.message || 'Update failed. Please try again.';\n          this.message = '';\n        }\n      });\n  }\n}\n","<p>update-tenant-profile works!</p>\n\n"],"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;AACnE,SAAqBC,WAAW,QAAQ,sBAAsB;;;;;AAQ9D,OAAM,MAAOC,4BAA4B;EAMvCC,YACUC,EAAe,EACfC,IAAgB,EAChBC,MAAc;IAFd,KAAAF,EAAE,GAAFA,EAAE;IACF,KAAAC,IAAI,GAAJA,IAAI;IACJ,KAAAC,MAAM,GAANA,MAAM;IANhB,KAAAC,OAAO,GAAW,EAAE;IACpB,KAAAC,KAAK,GAAW,EAAE;EAMf;EAEHC,QAAQA,CAAA;IACN,IAAI,CAACC,UAAU,GAAG,IAAI,CAACN,EAAE,CAACO,KAAK,CAAC;MAC9BC,cAAc,EAAE,CAAC,EAAE,EAAE,CAACZ,UAAU,CAACa,QAAQ,CAAC,CAAC;MAC3CC,WAAW,EAAE,CAAC,EAAE,EAAE,CAACd,UAAU,CAACa,QAAQ,EAAEb,UAAU,CAACe,KAAK,CAAC,CAAC;MAC1DC,iBAAiB,EAAE,CAAC,EAAE,EAAE,CAAChB,UAAU,CAACa,QAAQ,EAAEb,UAAU,CAACiB,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC;MAClFC,sBAAsB,EAAE,CAAC,EAAE,EAAE,CAAClB,UAAU,CAACa,QAAQ,CAAC,CAAC;MACnDM,aAAa,EAAE,CAAC,EAAE,EAAE,CAACnB,UAAU,CAACa,QAAQ,EAAEb,UAAU,CAACiB,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;MAC1EG,aAAa,EAAE,CAAC,EAAE,EAAE,CAACpB,UAAU,CAACa,QAAQ,EAAEb,UAAU,CAACiB,OAAO,CAAC,4BAA4B,CAAC,CAAC;KAC5F,CAAC;EACJ;EAEAI,QAAQA,CAAA;IACN,IAAI,IAAI,CAACX,UAAU,CAACY,OAAO,EAAE;MAC3B,IAAI,CAACd,KAAK,GAAG,+CAA+C;MAC5D;;IAGF,MAAMe,OAAO,GAAG,IAAItB,WAAW,CAAC;MAC9B,eAAe,EAAE,SAAS,GAAGuB,YAAY,CAACC,OAAO,CAAC,OAAO;KAC1D,CAAC;IAEF,IAAI,CAACpB,IAAI,CAACqB,GAAG,CAAM,4BAA4B,EAAE,IAAI,CAAChB,UAAU,CAACiB,KAAK,EAAE;MAAEJ;IAAO,CAAE,CAAC,CACjFK,SAAS,CAAC;MACTC,IAAI,EAAGC,QAAQ,IAAI;QACjB,IAAI,CAACvB,OAAO,GAAGuB,QAAQ,CAACvB,OAAO;QAC/B,IAAI,CAACC,KAAK,GAAG,EAAE;MACjB,CAAC;MACDA,KAAK,EAAGuB,GAAG,IAAI;QACb,IAAI,CAACvB,KAAK,GAAGuB,GAAG,CAACvB,KAAK,EAAED,OAAO,IAAI,kCAAkC;QACrE,IAAI,CAACA,OAAO,GAAG,EAAE;MACnB;KACD,CAAC;EACN;;;uBA5CWL,4BAA4B,EAAA8B,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,UAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,MAAA;IAAA;EAAA;;;YAA5BrC,4BAA4B;MAAAsC,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,QAAA,WAAAC,sCAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCVzCb,EAAA,CAAAe,cAAA,QAAG;UAAAf,EAAA,CAAAgB,MAAA,mCAA4B;UAAAhB,EAAA,CAAAiB,YAAA,EAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}